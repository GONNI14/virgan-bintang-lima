/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kasir;

import Menu.MenuForm;  // Mengimpor MenuForm dari package Menu
import Inventory.InventoryForm;  // Mengimpor InventoryForm dari package Inventory
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;



/**
 *
 * @author user
 */
public class KasirForm extends javax.swing.JFrame {
    private MenuForm menuForm;

    /**
     * Creates new form kasir
     */
    public KasirForm() {
        initComponents();
         setShortcutKeys();
             txtPelayan.setText(Helper.getNamaPegawai());
             txtPelayan.setEditable(false);
             setupKasirActions();
             // === PERHITUNGAN OTOMATIS KEMBALIAN ===
txtTunai.getDocument().addDocumentListener(simpleDocListener(() -> hitungKembalian()));
txtKredit.getDocument().addDocumentListener(simpleDocListener(() -> hitungKembalian()));

// Pastikan txtKembalian tidak bisa diketik manual
txtKembalian.setEditable(false);

    }
  
    
    
    
    private void setShortcutKeys() {
    // Bind tombol F12 ke aksi membuka MenuForm
    getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW)
        .put(javax.swing.KeyStroke.getKeyStroke("F12"), "openMenuForm");
    
    getRootPane().getActionMap().put("openMenuForm", new javax.swing.AbstractAction() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent e) {
            btnPilihMenu.doClick(); // Simulasikan klik tombol "Pilih Menu"
        }
    });
    

}
    
private void openMenuForm() {
    MenuForm menuForm = new MenuForm(this); // ‚Üê penting: this dikirim
    menuForm.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    menuForm.setLocationRelativeTo(this);
    menuForm.setVisible(true);
    btnPilihMenu.doClick();
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUtama = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMember = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAngka = new javax.swing.JTextField();
        txtAgen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPelayan = new javax.swing.JTextField();
        txtNoTransaksi = new javax.swing.JTextField();
        jdc = new com.toedter.calendar.JDateChooser();
        panelTabelKasir = new javax.swing.JPanel();
        btnPilihMenu = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKasir = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarKeterangan = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtAngkaP = new javax.swing.JTextField();
        txtAngkaS = new javax.swing.JTextField();
        txtSubtotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtPajak = new javax.swing.JTextField();
        txtService = new javax.swing.JTextField();
        txtDiskon = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtTunai = new javax.swing.JTextField();
        txtKredit = new javax.swing.JTextField();
        txtKembalian = new javax.swing.JTextField();
        txtGrandTotal = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtarTotal = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1360, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelUtama.setBackground(new java.awt.Color(255, 255, 255));
        panelUtama.setPreferredSize(new java.awt.Dimension(1920, 1080));
        panelUtama.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Tunai");
        panelUtama.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 640, -1, -1));
        panelUtama.add(txtMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 200, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Member :");
        panelUtama.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Pelayan:");
        panelUtama.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, -1, -1));

        txtAngka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAngkaActionPerformed(evt);
            }
        });
        panelUtama.add(txtAngka, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 650, 40, 30));
        panelUtama.add(txtAgen, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 200, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Agen:");
        panelUtama.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Tanggal:");
        panelUtama.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("No.Transaksi :");
        panelUtama.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));
        panelUtama.add(txtPelayan, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 200, 30));
        panelUtama.add(txtNoTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 200, 30));
        panelUtama.add(jdc, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 160, 170, -1));

        panelTabelKasir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelTabelKasir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPilihMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPilihMenu.setText("[F12] Pilih Menu");
        btnPilihMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihMenuActionPerformed(evt);
            }
        });
        panelTabelKasir.add(btnPilihMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        btnEdit.setBackground(new java.awt.Color(255, 204, 0));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        panelTabelKasir.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        panelTabelKasir.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, -1));

        tblKasir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama", "Qty", "Harga", "Jumlah", "Kategori", "Keterangan"
            }
        ));
        tblKasir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKasirMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKasir);

        panelTabelKasir.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 780, 180));

        panelUtama.add(panelTabelKasir, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 850, 340));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Nama:");
        panelUtama.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        txtarKeterangan.setColumns(20);
        txtarKeterangan.setRows(5);
        jScrollPane2.setViewportView(txtarKeterangan);

        panelUtama.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Pajak");
        panelUtama.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Service");
        panelUtama.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 730, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Keterangan:");
        panelUtama.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 590, -1, -1));
        panelUtama.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 200, 30));

        txtAngkaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAngkaPActionPerformed(evt);
            }
        });
        panelUtama.add(txtAngkaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 690, 40, 30));

        txtAngkaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAngkaSActionPerformed(evt);
            }
        });
        panelUtama.add(txtAngkaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 730, 40, 30));

        txtSubtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubtotalActionPerformed(evt);
            }
        });
        panelUtama.add(txtSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 610, 110, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("%");
        panelUtama.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 690, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Diskon");
        panelUtama.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 650, -1, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("%");
        panelUtama.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 650, -1, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("%");
        panelUtama.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 740, -1, -1));
        panelUtama.add(txtPajak, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 690, 110, -1));
        panelUtama.add(txtService, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 730, 110, -1));
        panelUtama.add(txtDiskon, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 650, 110, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Sub Total");
        panelUtama.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 610, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Kredit");
        panelUtama.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 680, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Kembalian");
        panelUtama.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 720, -1, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Uang Disimpan");
        panelUtama.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 760, -1, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Grsnd Total");
        panelUtama.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 600, -1, 20));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Akun Kas");
        panelUtama.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 760, -1, -1));

        btnCancel.setBackground(new java.awt.Color(204, 204, 204));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCancel.setText("Cancel");
        panelUtama.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 840, 240, 80));

        btnSave.setBackground(new java.awt.Color(0, 255, 0));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        panelUtama.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 840, 240, 80));

        txtTunai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTunaiKeyReleased(evt);
            }
        });
        panelUtama.add(txtTunai, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 640, 90, 30));

        txtKredit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKreditKeyReleased(evt);
            }
        });
        panelUtama.add(txtKredit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 680, 90, 30));
        panelUtama.add(txtKembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 720, 90, 30));
        panelUtama.add(txtGrandTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 600, 90, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel21.setText("TOTAL:");
        panelUtama.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 60, -1, -1));

        txtarTotal.setColumns(20);
        txtarTotal.setRows(5);
        jScrollPane3.setViewportView(txtarTotal);

        panelUtama.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 50, -1, -1));

        getContentPane().add(panelUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAngkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAngkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAngkaActionPerformed

    private void txtAngkaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAngkaPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAngkaPActionPerformed

    private void txtAngkaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAngkaSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAngkaSActionPerformed

    private void txtSubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubtotalActionPerformed

    private void btnPilihMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihMenuActionPerformed
        // TODO add your handling code here:
        if (menuForm == null || !menuForm.isDisplayable()) {
        MenuForm menuForm = new MenuForm(this); // <== kirim 'this' biar tidak null
    menuForm.setVisible(true);
        menuForm.setLocationRelativeTo(this);
    } else {
        menuForm.toFront();
    }
    }//GEN-LAST:event_btnPilihMenuActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
       Connection conn = null;
    PreparedStatement pstTransaksi = null;
    ResultSet rs = null;

    try {
        conn = Koneksi.getConnection();
        conn.setAutoCommit(false); // mulai transaksi

        // Simpan ke tabel Transaksi
        String sqlTransaksi = "INSERT INTO public.\"Transaksi\" " +
            "(\"idPelanggan\", \"idPelayan\", \"idAgen\", \"idMember\", " +
            "\"Tanggal\", \"Subtotal\", \"Diskon\", \"Pajak\", \"Service\", " +
            "\"GrandTotal\", \"Tunai\", \"Kredit\", \"Kembalian\", \"AkunKas\") " +
            "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING \"noTransaksi\";";

        pstTransaksi = conn.prepareStatement(sqlTransaksi);

        // Contoh input
        pstTransaksi.setInt(1, 0); // idPelanggan
        pstTransaksi.setInt(2, 1); // idPelayan
        pstTransaksi.setInt(3, 0); // idAgen
        pstTransaksi.setInt(4, 0); // idMember
        pstTransaksi.setDate(5, new java.sql.Date(jdc.getDate().getTime())); // tanggal
        pstTransaksi.setInt(6, parseAngka(txtSubtotal.getText()));
        pstTransaksi.setInt(7, parseAngka(txtDiskon.getText()));
        pstTransaksi.setInt(8, parseAngka(txtPajak.getText()));
        pstTransaksi.setInt(9, parseAngka(txtService.getText()));
        pstTransaksi.setInt(10, parseAngka(txtGrandTotal.getText()));
        pstTransaksi.setInt(11, parseAngka(txtTunai.getText()));
        pstTransaksi.setInt(12, parseAngka(txtKredit.getText()));
        pstTransaksi.setInt(13, parseAngka(txtKembalian.getText()));
        pstTransaksi.setString(14, "Kasir"); // akun kas

        // Jalankan dan ambil noTransaksi
        rs = pstTransaksi.executeQuery();
        int noTransaksi = 0;
        if (rs.next()) {
            noTransaksi = rs.getInt("noTransaksi");
        }

        conn.commit();

        JOptionPane.showMessageDialog(this, "‚úÖ Transaksi berhasil disimpan! No: " + noTransaksi,
            "Sukses", JOptionPane.INFORMATION_MESSAGE);

    } catch (Exception e) {
        if (conn != null) {
            try { conn.rollback(); } catch (SQLException ex) { ex.printStackTrace(); }
        }
        JOptionPane.showMessageDialog(this, "‚ùå Terjadi kesalahan: " + e.getMessage(),
            "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();

    } finally {
        try {
            if (pstTransaksi != null) pstTransaksi.close();
            if (rs != null) rs.close();
            if (conn != null) conn.setAutoCommit(true);
        } catch (SQLException e) { e.printStackTrace(); }
    }
    }//GEN-LAST:event_btnSaveActionPerformed
private int parseAngka(String teks) {
    if (teks == null || teks.trim().isEmpty() || teks.trim().equals("-")) {
        return 0;
    }
    try {
        return Integer.parseInt(teks.trim());
    } catch (NumberFormatException e) {
        return 0;
    }
}

      private String safeToString(Object obj) {
    return obj == null ? "" : obj.toString();
}

private int safeParseInt(Object obj) {
    if (obj == null) return 0;
    try {
        return Integer.parseInt(obj.toString());
    } catch (NumberFormatException e) {
        return 0;
    }
}
  


    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void tblKasirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKasirMouseClicked
        // TODO add your handling code here:
      int row = tblKasir.getSelectedRow();
    if (row >= 0) {
        // hanya isi text area keterangan, biarkan field nama tetap kosong
        String keterangan = tblKasir.getValueAt(row, 6).toString();
        txtarKeterangan.setText(keterangan);
    }
    }//GEN-LAST:event_tblKasirMouseClicked

    private void txtTunaiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTunaiKeyReleased
        // TODO add your handling code here:
        hitungKembalian();
    }//GEN-LAST:event_txtTunaiKeyReleased

    private void txtKreditKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKreditKeyReleased
        // TODO add your handling code here:
        hitungKembalian();
    }//GEN-LAST:event_txtKreditKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KasirForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KasirForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KasirForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KasirForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KasirForm().setVisible(true);
            }
        });
    }
    
  public void tambahPesananKeTabel(Object[][] dataPesanan) {
    DefaultTableModel modelKasir = (DefaultTableModel) tblKasir.getModel();

    System.out.println("KasirForm.tambahPesananKeTabel dipanggil. Jumlah baris: " + (dataPesanan == null ? 0 : dataPesanan.length));

    for (int r = 0; r < dataPesanan.length; r++) {
        Object[] row = dataPesanan[r];
        if (row == null) continue;

        // pastikan panjang minimal 6
        if (row.length < 6) {
            System.out.println("Baris " + r + " panjang < 6, skip: " + java.util.Arrays.toString(row));
            continue;
        }

        // Bersihkan null ‚Üí default
        for (int c = 0; c < row.length; c++) {
            if (row[c] == null) {
                if (c == 3 || c == 4 || c == 5) row[c] = 0;
                else row[c] = "";
            }
        }

        String kode = row[0].toString().trim();
        String nama = row[1].toString().trim();
        String kategori = row[2].toString().trim();

        int harga = 0;
        int qty = 0;
        int total = 0;
        try { harga = Integer.parseInt(row[3].toString().trim()); } catch (Exception ex) { harga = 0; }
        try { qty   = Integer.parseInt(row[4].toString().trim()); } catch (Exception ex) { qty = 0; }
        try { total = Integer.parseInt(row[5].toString().trim()); } catch (Exception ex) { total = harga * qty; }

        // Jika kode kosong atau qty 0, skip (tidak masuk ke tblKasir)
        if (kode.isEmpty()) {
            System.out.println("Baris " + r + " memiliki kode kosong, di-skip: " + java.util.Arrays.toString(row));
            continue;
        }
        if (qty <= 0) {
            System.out.println("Baris " + r + " qty <= 0, di-skip: " + java.util.Arrays.toString(row));
            continue;
        }

        boolean sudahAda = false;
        for (int i = 0; i < modelKasir.getRowCount(); i++) {
            Object kodeLamaObj = modelKasir.getValueAt(i, 0);
            String kodeLama = kodeLamaObj == null ? "" : kodeLamaObj.toString();
            if (kodeLama.equals(kode)) {
                // ambil qty lama dengan aman (kolom qty ada di index 2)
                int qtyLama = 0;
                try {
                    Object qobj = modelKasir.getValueAt(i, 2);
                    qtyLama = qobj == null ? 0 : Integer.parseInt(qobj.toString());
                } catch (Exception ex) { qtyLama = 0; }

                int qtyGabungan = qtyLama + qty;
                modelKasir.setValueAt(qtyGabungan, i, 2);
                modelKasir.setValueAt(harga * qtyGabungan, i, 4); // update total
                sudahAda = true;
                break;
            }
        }

        if (!sudahAda) {
            Object[] newRow = new Object[]{
                kode,      // 0 - Kode
                nama,      // 1 - Nama
                qty,       // 2 - Qty
                harga,     // 3 - Harga
                total,     // 4 - Total
                kategori,  // 5 - Kategori
                ""         // 6 - Keterangan (kosong)
            };
            modelKasir.insertRow(0, newRow);
        }
    }

    // update total bayar pada kasir
    try {
        hitungTotalBayar(); // pastikan metode ini ada di KasirForm
    } catch (Exception ex) {
        System.out.println("Warning: hitungTotalBayar gagal: " + ex.getMessage());
    }
}
            
        private void setupKasirActions() {
    // Tombol Edit
    btnEdit.addActionListener(e -> handleEditKasir());

    // Tombol Delete
    btnDelete.addActionListener(e -> handleDeleteKasir());

    // Saat klik baris di tabel, hanya tampilkan keterangan
    tblKasir.getSelectionModel().addListSelectionListener(e -> {
        if (!e.getValueIsAdjusting()) {
            int sel = tblKasir.getSelectedRow();
            if (sel >= 0) {
                DefaultTableModel model = (DefaultTableModel) tblKasir.getModel();
                Object ket = model.getValueAt(sel, 6);

                // Hanya isi keterangan (tidak ubah field nama)
                txtarKeterangan.setText(ket == null ? "" : ket.toString());
            }
        }
    });

    // Update total otomatis jika diskon/pajak/service berubah
    txtDiskon.getDocument().addDocumentListener(simpleDocListener(() -> hitungTotalBayar()));
    txtPajak.getDocument().addDocumentListener(simpleDocListener(() -> hitungTotalBayar()));
    txtService.getDocument().addDocumentListener(simpleDocListener(() -> hitungTotalBayar()));
}


          
          private void handleEditKasir() {
    int selectedRow = tblKasir.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Silakan pilih baris yang ingin diedit.");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) tblKasir.getModel();

    try {
        // Ambil data lama dari tabel
        String namaLama = model.getValueAt(selectedRow, 1).toString();
        int qtyLama = Integer.parseInt(model.getValueAt(selectedRow, 2).toString());
        int hargaLama = Integer.parseInt(model.getValueAt(selectedRow, 3).toString());
        String keteranganLama = model.getValueAt(selectedRow, 6) == null ? "" : model.getValueAt(selectedRow, 6).toString();

        // Ambil input baru untuk keterangan saja
        String keteranganBaru = txtarKeterangan.getText().trim();

        // Minta user ubah qty dan harga lewat dialog
        String qtyInput = JOptionPane.showInputDialog(this, "Masukkan jumlah baru:", qtyLama);
        String hargaInput = JOptionPane.showInputDialog(this, "Masukkan harga baru:", hargaLama);

        if (qtyInput == null || hargaInput == null) {
            return; // user batal
        }

        int qtyBaru = Integer.parseInt(qtyInput);
        int hargaBaru = Integer.parseInt(hargaInput);
        int totalBaru = qtyBaru * hargaBaru;

        // Update tabel (tidak ubah kolom nama sama sekali)
        model.setValueAt(qtyBaru, selectedRow, 2);         // Qty
        model.setValueAt(hargaBaru, selectedRow, 3);       // Harga
        model.setValueAt(totalBaru, selectedRow, 4);       // Jumlah
        model.setValueAt(keteranganBaru.isEmpty() ? keteranganLama : keteranganBaru, selectedRow, 6); // Keterangan

        // Hitung ulang total
        hitungTotalBayar();

        JOptionPane.showMessageDialog(this, "Data pesanan berhasil diperbarui.");
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Input tidak valid. Harap masukkan angka untuk qty dan harga.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + ex.getMessage());
        ex.printStackTrace();
    }
}



private void handleDeleteKasir() {
    int selectedRow = tblKasir.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Silakan pilih baris yang ingin dihapus.");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus baris ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    DefaultTableModel model = (DefaultTableModel) tblKasir.getModel();

    // Jika ingin melakukan update stok DB saat delete dari kasir (mis. batal transaksi),
    // harus melakukan update ke DB di sini. Untuk saat ini kita hanya hapus dari UI.
    model.removeRow(selectedRow);

    // Update total
    hitungTotalBayar();

    // Clear input area
    txtNama.setText("");
    txtarKeterangan.setText("");

    JOptionPane.showMessageDialog(this, "Baris berhasil dihapus.");
}


        private void hitungKembalian() {
    double grandTotal = parseDoubleSafe(txtGrandTotal.getText());
    double tunai = parseDoubleSafe(txtTunai.getText());
    double kredit = parseDoubleSafe(txtKredit.getText());

    double totalBayar = tunai + kredit;
    double kembalian = totalBayar - grandTotal;

    if (kembalian < 0) kembalian = 0; // biar gak minus
    txtKembalian.setText("Rp " + String.format("%,.0f", kembalian));
}

        
        
        private void hitungTotal() {
    DefaultTableModel modelKasir = (DefaultTableModel) tblKasir.getModel();
    double subtotal = 0;

    for (int i = 0; i < modelKasir.getRowCount(); i++) {
        Object jumlahObj = modelKasir.getValueAt(i, 4); // kolom 4 = jumlah/total per item
        if (jumlahObj != null) {
            try {
                subtotal += Double.parseDouble(jumlahObj.toString());
            } catch (NumberFormatException e) {
                // skip jika tidak angka
            }
        }
    }

    txtSubtotal.setText(String.valueOf(subtotal));

    // ambil diskon, pajak, service
    double diskon = parseDoubleSafe(txtDiskon.getText());
    double pajak = parseDoubleSafe(txtPajak.getText());
    double service = parseDoubleSafe(txtService.getText());

    double grandTotal = subtotal;
    if (diskon > 0) grandTotal -= (subtotal * diskon / 100);
    if (pajak > 0) grandTotal += (subtotal * pajak / 100);
    if (service > 0) grandTotal += (subtotal * service / 100);

    txtGrandTotal.setText(String.valueOf(grandTotal));

    // perbarui kembalian juga
    hitungKembalian();
}

       
        
   private void hitungTotalBayar() {
    DefaultTableModel modelKasir = (DefaultTableModel) tblKasir.getModel();
    int subtotal = 0;

    for (int i = 0; i < modelKasir.getRowCount(); i++) {
        Object nilai = modelKasir.getValueAt(i, 4); // kolom Jumlah (total per baris)
        if (nilai != null && !nilai.toString().isEmpty()) {
            try {
                subtotal += Integer.parseInt(nilai.toString());
            } catch (NumberFormatException e) {
                System.err.println("Format angka salah di baris " + i + ": " + nilai);
            }
        }
    }

    // Tampilkan subtotal
    txtSubtotal.setText(String.valueOf(subtotal));

    // Baca diskon/pajak/service (anggap input sebagai persen, mis. 10 berarti 10%)
    double diskonPct = parseDoubleSafe(txtDiskon.getText()); // e.g. 10 => 10%
    double pajakPct = parseDoubleSafe(txtPajak.getText());
    double servicePct = parseDoubleSafe(txtService.getText());

    // Diskon bisa ditulis sebagai negative value jika mau potongan negatif?
    double diskonAmount = subtotal * (diskonPct / 100.0);
    double pajakAmount = subtotal * (pajakPct / 100.0);
    double serviceAmount = subtotal * (servicePct / 100.0);

    double grand = subtotal - diskonAmount + pajakAmount + serviceAmount;

    // tampilkan
    txtarTotal.setText("Rp " + String.format("%,d", (long) subtotal));
    txtGrandTotal.setText(String.format("%.0f", Math.round(grand))); // bisa format currency sesuai kebutuhan
}
   
   private javax.swing.event.DocumentListener simpleDocListener(Runnable r) {
        return new javax.swing.event.DocumentListener() {
            public void changedUpdate(javax.swing.event.DocumentEvent e) { r.run(); }
            public void insertUpdate(javax.swing.event.DocumentEvent e) { r.run(); }
            public void removeUpdate(javax.swing.event.DocumentEvent e) { r.run(); }
        };
    }
   
 private double parseDoubleSafe(String val) {
    try {
        return Double.parseDouble(val.trim());
    } catch (Exception e) {
        return 0;
    }
}
   

    
    



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnPilihMenu;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JDateChooser jdc;
    private javax.swing.JPanel panelTabelKasir;
    private javax.swing.JPanel panelUtama;
    private javax.swing.JTable tblKasir;
    private javax.swing.JTextField txtAgen;
    private javax.swing.JTextField txtAngka;
    private javax.swing.JTextField txtAngkaP;
    private javax.swing.JTextField txtAngkaS;
    private javax.swing.JTextField txtDiskon;
    private javax.swing.JTextField txtGrandTotal;
    private javax.swing.JTextField txtKembalian;
    private javax.swing.JTextField txtKredit;
    private javax.swing.JTextField txtMember;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoTransaksi;
    private javax.swing.JTextField txtPajak;
    private javax.swing.JTextField txtPelayan;
    private javax.swing.JTextField txtService;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTunai;
    private javax.swing.JTextArea txtarKeterangan;
    private javax.swing.JTextArea txtarTotal;
    // End of variables declaration//GEN-END:variables
}
